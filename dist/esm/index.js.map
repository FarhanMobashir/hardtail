{"version":3,"file":"index.js","sources":["../../src/useThunkReducer.js","../../src/buildApiHooks.js","../../src/ApiContext.jsx"],"sourcesContent":["import React from \"react\";\r\nexport const useThunkReducer = (reducer, initialState) => {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  const enhancedDispatch = React.useCallback(\r\n    (action) => {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.log(\"action type\", action.type, \"payload\", action.payload);\r\n      }\r\n      if (typeof action === \"function\") {\r\n        action(dispatch);\r\n      } else {\r\n        dispatch(action);\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n  return [state, enhancedDispatch];\r\n};\r\n","// /@ts-check\r\nimport React from \"react\";\r\n\r\n/**\r\n *\r\n * @param {{\r\n * baseUrl: string,\r\n * headers: RequestInit[\"headers\"]\r\n * }} param0\r\n * @returns Promise<{\r\n * get: (url: string, params?: any) => Promise<any>,\r\n * post: (url: string, data?: any) => Promise<any>,\r\n * put: (url: string, data?: any) => Promise<any>,\r\n * delete: (url: string) => Promise<any>\r\n * }>\r\n */\r\nexport const fetchBaseQuery = ({ baseUrl, headers }) => {\r\n  return async (query, options) => {\r\n    return await fetch(`${baseUrl}${query}`, {\r\n      ...options,\r\n      headers: headers,\r\n    });\r\n  };\r\n};\r\n\r\nconst enhancedispatch = (dispatch, data, item) => {\r\n  dispatch({ type: item.name, payload: data });\r\n};\r\n\r\n/**\r\n *\r\n * @param {item} item\r\n * @returns {makeHookName(item)}\r\n */\r\nexport const makeHookName = (item) => {\r\n  return `use${item.name[0].toUpperCase() + item.name.slice(1)}`;\r\n};\r\n\r\nexport const buildHooks =\r\n  (dispatchFn) =>\r\n  /**\r\n   *\r\n   * @param {{\r\n   * queryArray: Array<{\r\n   * name: string,\r\n   * query: string,\r\n   * method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\r\n   * type: \"query\" | \"mutation\",\r\n   * }>\r\n   * baseQuery: <typeof fetchBaseQuery>,\r\n   * dispatchFn: React.DispatchWithoutAction\r\n   * }} props\r\n   * @returns {{[k: string]: CallableFunction;}}\r\n   *\r\n   * This function is used to fetch the base query for the API.\r\n   */\r\n  ({ queryArray, baseQuery }) => {\r\n    /**\r\n     * @type {{[k: string]: CallableFunction}}\r\n     */\r\n    const hooks = {};\r\n    queryArray.forEach((item) => {\r\n      const hookName = makeHookName(item);\r\n\r\n      /**\r\n       * @param {{urlParams:string,fetchOptions:}} param0\r\n       * @returns {{loading: boolean, data: any, error: any}}\r\n       */\r\n      const useQuery = ({ urlParams = \"\", fetchOptions }) => {\r\n        const [loading, setLoading] = React.useState(true);\r\n        const [error, setError] = React.useState(false);\r\n        const [data, setData] = React.useState(null);\r\n        React.useEffect(() => {\r\n          setLoading(true);\r\n\r\n          baseQuery(`${item.query}/${urlParams}`, {\r\n            ...fetchOptions,\r\n          })\r\n            .then((res) => {\r\n              if (item.log) {\r\n                console.log(\"logging response\", res);\r\n              }\r\n              return res.json();\r\n            })\r\n            .then((data) => {\r\n              setData(data);\r\n              setLoading(false);\r\n              enhancedispatch(dispatchFn, data, item);\r\n            })\r\n            .catch((err) => {\r\n              if (item.log) {\r\n                console.error(\"logging error\", err);\r\n              }\r\n              setLoading(false);\r\n              setError(err);\r\n            });\r\n\r\n          return () => {};\r\n        }, [dispatchFn, urlParams]);\r\n\r\n        return { loading, data, error };\r\n      };\r\n\r\n      /**\r\n       *\r\n       * @param {{\r\n       * body: any,\r\n       * urlParams: string\r\n       * }} urlParams\r\n       * @returns {[\r\n       * mutationCallBack : ({ body, urlParams }: {\r\n       * body?: {};\r\n       * urlParams?: string;\r\n       * }) => void,\r\n       * {\r\n       * loading: boolean;\r\n       * error: boolean;\r\n       * data: any;\r\n       * }\r\n       * ]}\r\n       */\r\n      function useMutation() {\r\n        const [loading, setLoading] = React.useState(null);\r\n        const [error, setError] = React.useState(false);\r\n        const [data, setData] = React.useState(null);\r\n        /**\r\n         * @param {{\r\n         * body: any,\r\n         * urlParams: string\r\n         * }} urlParams\r\n         * @returns {void}\r\n         *\r\n         */\r\n        let mutationCallBack = React.useCallback(\r\n          ({ body = {}, urlParams = \"\" }) => {\r\n            setLoading(true);\r\n            baseQuery(`${item.query}/${urlParams}`, {\r\n              method: item.method,\r\n              body: JSON.stringify(body),\r\n            })\r\n              .then((res) => {\r\n                if (item.log) {\r\n                  console.log(\"logging response\", res);\r\n                }\r\n                return res.json();\r\n              })\r\n              .then((data) => {\r\n                setData(data);\r\n                setLoading(false);\r\n                enhancedispatch(\r\n                  dispatchFn,\r\n                  {\r\n                    data: data,\r\n                  },\r\n                  item\r\n                );\r\n              })\r\n              .catch((err) => {\r\n                if (item.log) {\r\n                  console.error(\"logging error\", err);\r\n                }\r\n                setLoading(false);\r\n                setError(err);\r\n              });\r\n          },\r\n          []\r\n        );\r\n\r\n        return [\r\n          mutationCallBack,\r\n          {\r\n            loading,\r\n            error,\r\n            data,\r\n          },\r\n        ];\r\n      }\r\n\r\n      if (item.type === \"query\") {\r\n        hooks[hookName] = useQuery;\r\n      } else if (item.type === \"mutation\") {\r\n        hooks[hookName] = useMutation;\r\n      }\r\n    });\r\n\r\n    return hooks;\r\n  };\r\n","import React from \"react\";\r\nimport { buildHooks } from \"./buildApiHooks\";\r\nimport { useThunkReducer } from \"./useThunkReducer\";\r\nexport const ApiContext = React.createContext();\r\n\r\nexport const ApiProvider = ({\r\n  children,\r\n  apiArray = [],\r\n  baseQuery,\r\n  apiActionTypes = {},\r\n}) => {\r\n  const getInitialState = (apiActionTypes) => {\r\n    let data = {};\r\n    for (let key in apiActionTypes) {\r\n      data[key] = null;\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const initialState = getInitialState(apiActionTypes);\r\n\r\n  const reducer = (state = initialState, action) => {\r\n    for (let key in initialState) {\r\n      if (action.type === key) {\r\n        state[action.type] = action.payload;\r\n      }\r\n    }\r\n    return state;\r\n  };\r\n\r\n  const [state, dispatch] = useThunkReducer(reducer, initialState);\r\n\r\n  const api = buildHooks(dispatch)({\r\n    queryArray: apiArray,\r\n    baseQuery: baseQuery,\r\n  });\r\n\r\n  return (\r\n    <ApiContext.Provider value={{ state, dispatch, ...api }}>\r\n      {children}\r\n    </ApiContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useApi = () => {\r\n  const context = React.useContext(ApiContext);\r\n  if (context === undefined) {\r\n    throw new Error(`useApi must be used within a ApiProvider`);\r\n  }\r\n  return context;\r\n};\r\n"],"names":["useThunkReducer","reducer","initialState","state","dispatch","React","useReducer","useCallback","action","process","env","NODE_ENV","console","log","type","payload","enhancedispatch","data","item","name","buildHooks","dispatchFn","queryArray","baseQuery","hooks","forEach","hookName","toUpperCase","slice","makeHookName","useQuery","urlParams","fetchOptions","loading","setLoading","useState","error","setError","setData","useEffect","query","then","res","json","catch","err","mutationCallBack","body","method","JSON","stringify","ApiContext","createContext","ApiProvider","children","apiArray","apiActionTypes","key","getInitialState","api","createElement","Provider","value","useApi","context","useContext","undefined","Error"],"mappings":"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"}